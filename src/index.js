'use strict';

//checkbox
function toggleCheckbox() {
    const checkbox = document.querySelectorAll('.filter-check_checkbox');
    //1st variant
    // for (let i = 0; i < checkbox.length; i++) {
    //     checkbox[i].addEventListener('change', function () {
    //         if (this.checked) {
    //             this.nextElementSibling.classList.add('checked');
    //         } else {
    //             this.nextElementSibling.classList.remove('checked');
    //         }
    //     });
    // }

    //2d variant
    checkbox.forEach((elem) => {
        elem.addEventListener('change', function () {
            if (this.checked) {
                this.nextElementSibling.classList.add('checked');
            } else {
                this.nextElementSibling.classList.remove('checked');
            }
        });
    });
}
//end checkbox

//bucket
function toggleCart() {
    const btnCArt = document.getElementById('cart'),
        modalCart = document.querySelector('.cart'),
        cartClose = document.querySelector('.cart-close');

    btnCArt.addEventListener('click', function () {
        modalCart.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });

    cartClose.addEventListener('click', function () {
        modalCart.style.display = 'none';
        document.body.style.overflow = '';
    });
}
//end bucket

//add order
function addCart() {
    const cards = document.querySelectorAll('.goods .card'),
        cartWrapper = document.querySelector('.cart-wrapper'),
        cartEmpty = document.getElementById('cart-empty'),
        countGoods = document.querySelector('.counter');

    cards.forEach((card) => {
        const btn = card.querySelector('button');

        btn.addEventListener('click', () => {
            const cardClone = card.cloneNode(true); //–∫–æ–ø–∏—è –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            cartWrapper.appendChild(cardClone);

            showData();

            const removeBtn = cardClone.querySelector('.btn'); //–ø–æ–ª—É—á–∏–ª–∏ –∫–Ω–æ–ø–∫—É –∏–∑ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
            removeBtn.textContent = '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã'; //–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ 
            removeBtn.addEventListener('click', () => {
                cardClone.remove(); //—É–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É
                showData(); //–æ–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–∫–∞–∑ —Å—É–º–º—ã 
            });
        });
    });

    function showData() {
        const cardsCart = cartWrapper.querySelectorAll('.card'),
            cardPrice = cartWrapper.querySelectorAll('.card-price'),
            cardTotal = document.querySelector('.cart-total span');

        countGoods.textContent = cardsCart.length; //–ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ—Å—è –≤ —î–ª–µ–º–µ–Ω—Ç–µ

        let sum = 0;
        cardPrice.forEach((elem) => {
            let price = parseFloat(elem.textContent); //–≤—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –∏–∑ —Ü–µ–Ω—ã, –ø—Ä–∏–≤–æ–¥—è —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
            sum += price; //—Å—É–º–º–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã
        });
        cardTotal.textContent = sum; //–í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–º–µ—Å—Ç–æ 0
        if (cardsCart.length !== 0) {
            cartEmpty.remove(); // —É–¥–∞–ª—è–µ–º –Ω–∞–¥–ø–∏—Å—å –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞—è
        } else {
            cartWrapper.appendChild(cartEmpty); //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–¥–ø–∏—Å—å, –µ—Å–ª–∏ —Å –Ω–µ–µ –≤—Å–µ —É–¥–∞–ª–∏–ª–∏
        }
    }
}
//end adding order

//filter sale and search
function actionPage() {
    const cards = document.querySelectorAll('.goods .card'),
        discountCheckbox = document.getElementById('discount-checkbox'),
        //goods = document.querySelector('.goods'),
        min = document.getElementById('min'),
        max = document.getElementById('max'),
        search = document.querySelector('.search-wrapper_input'), //–ø–æ–ª—É—á–∞–µ–º –∏–Ω–ø—É—Ç –ø–æ–∏—Å–∫–∞
        searchBtn = document.querySelector('.search-btn');

    discountCheckbox.addEventListener('click', filter);
    min.addEventListener('change', filter);
    max.addEventListener('change', filter);

    function filter() {
        cards.forEach((card) => { //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            const cardPrice = card.querySelector('.card-price'),
                price = parseFloat(cardPrice.textContent),
                discount = card.querySelector('.card-sale');
            //–ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω–æ –ª–∏ –∫–∞–∫–æ–µ-—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –º–µ–Ω—å—à–µ –ª–∏ –æ–Ω–æ –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å –º–∞–∫—Å.
            if (min.value && price < min.value || (max.value && price > max.value)) {
                card.parentNode.style.display = 'none';
            } else if (discountCheckbox.checked && !discount) {
                card.parentNode.style.display = 'none';
            } else {
                card.parentNode.style.display = ''; //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏, —É–±–∏—Ä–∞—è –≥–∞–ª–æ–∫—É —Å –∞–∫—Ü–∏–π
            }
        });
    }
    //end filter sale and search

    searchBtn.addEventListener('click', () => {
        const searchText = new RegExp(search.value.trim(), 'i');
        //–ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–∏—Å–∫ –ø—Ä–µ–æ–±—Ä–∞–∑—É—è –≤ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–≥–Ω–æ—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ ('i')
        //–ø—Ä–∏–º–µ–Ω—è—è –º–µ—Ç–æ–¥ —Ç—Ä–∏–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
        cards.forEach((card) => {
            const title = card.querySelector('.card-title');
            //—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –º–µ—Ç–æ–¥–æ–º –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Ç –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞—à–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
            if (!searchText.test(title.textContent)) {
                card.parentNode.style.display = 'none'; //–ø—Ä—è—á–µ–º –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            } else {
                card.parentNode.style.display = '';
                //console.dir(cards[0]); -–º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ—Ö —Å–≤–æ–π—Å—Ç–≤ –∏ –º–µ—Ç–æ–¥–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–∞
            }
        });
        search.value = '';
    });
}

//get data from server

function getData() {
    const goodsWrapper = document.querySelector('.goods');

    return fetch('../db/db.json') //–º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        .then((response) => { //–ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ
            //—Å –ø–æ–º–æ—â—å—é then –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –ø—Ä–æ–º–∏—Å –∏ –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Å—Ç–∞—Ç—É—Å—ã
            if (response.ok) { // –µ—Å–ª–∏ –≤—Å–µ –æ–∫, —Ç–æ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
                return response.json(); //–º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Å json —Ñ–æ—Ä–º–∞—Ç–æ–º
            } else {
                throw new Error('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞: ', +response.status); //–µ—Å–ª–∏ –Ω–µ –≤—Å–µ –æ–∫, —Ç–æ –≤—ã–¥–∞–µ–º –æ—à–∏–±–∫—É
            }
        })
        .then((data) => { //–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            return data;
        })
        .catch((err) => { //–º–µ—Ç–æ–¥ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –æ—à–∏–±–æ–∫
            console.warn(err); //–≤—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
            goodsWrapper.innerHTML = '<div style="font-size: 30px">–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...</div>'; //–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        });
    //.catch(err => console.warn(err)); - —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–ø–∏—Å–∏
}


//rendering card
function renderCards(data) {
    const goodsWrapper = document.querySelector('.goods');
    data.goods.forEach((good) => { //–ø–µ—Ä–µ–±–µ—Ä–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –º–∞—Å—Å–∏–≤–µ goods (–≤–∑—è—Ç–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—å–µ–∫—Ç–∞)
        const card = document.createElement('div'); //—Å–æ–∑–¥–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç - –¥–∏–≤ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –≤–µ—Ä—Å—Ç–∫–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
        card.className = 'col-12 col-md-6 col-lg-4 col-xl-3';
        //–¥–∞–ª–µ–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É —Ç–æ–≤–∞—Ä–∞ —Å–∫–∏–¥–∫–∞ (—Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞) –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∏–∫–µ—Ä –Ω–∞ —Ç–æ–≤–∞—Ä–µ
        //–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ñ –ø–æ—Ç–æ–º –æ—Ç–∫—Ä—ñ–≤–∞—Ç—å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        card.innerHTML = ` <div class="card" data-category="${good.category}">
                        ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''} 
                            <div class="card-img-wrapper">
                            <span class="card-img-top"
            style="background-image: url('${good.img}')"></span>
                            </div>
                            <div class="card-body justify-content-between">
                            <div class="card-price" style="${good.sale ? 'color:red' : ''}">${good.price} UAH</div>
                            <h5 class="card-title">${good.title}</h5>
                            <button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                             </div>
                         </div>`;

        goodsWrapper.appendChild(card);
    });

}

//end of rendering func
//end getting data

//Catalog
function renderCatalog() {
    const cards = document.querySelectorAll('.goods .card'),
        catalogList = document.querySelector('.catalog-list'),
        catalogBtn = document.querySelector('.catalog-button'),
        catalogWrapper = document.querySelector('.catalog');
    const categories = new Set(); //—Å–æ–∑–¥–∞–µ–º –ö–æ–ª–ª–µ–∫—Ü–∏—é –º–µ—Ç–æ–¥–æ–º Set

    cards.forEach((card) => {
        categories.add(card.dataset.category); //–¥–∞—Ç–∞—Å–µ—Ç - —Å–≤–æ–π—Å—Ç–≤–æ –≤–∑—è—Ç–æ–µ –∏–∑ –î–û–ú –¥–µ—Ä–µ–≤–∞ —á–µ—Ä–µ–∑ console.dir
    });

    categories.forEach((item) => {
        const li = document.createElement('li');
        li.textContent = item;
        catalogList.appendChild(li);
    });

    catalogBtn.addEventListener('click', (event) => {
        if (catalogWrapper.style.display) {
            catalogWrapper.style.display = '';
        } else {
            catalogWrapper.style.display = 'block';
        }

        if (event.target.tagName === 'LI') {
            cards.forEach((card) => {
                if (card.dataset.category === event.target.textContent) {
                    card.parentNode.style.display = '';
                } else {
                    card.parentNode.style.display = 'none';
                }
            });
        }
    });
}
//end catalog

getData().then((data) => {
    renderCards(data);
    toggleCheckbox();
    toggleCart();
    addCart();
    actionPage();
    renderCatalog();
});